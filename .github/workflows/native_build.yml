
name: Build Native

on:
  workflow_dispatch:
  push:
    tags:
      - '*-dev*'
  release:
    types:
      - released
      - prereleased

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Compile Java
        run: chmod +x gradlew && ./gradlew jar
      - name: Compile Native
        run: |
          cd native
          mkdir cmake-build-debug
          cd cmake-build-debug
          cmake ..
          make -j8
      - name: Run test
        run: ./gradlew test
#      - name: Archive Jar artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: Jar
#          path: |
#            build/libs
  build-linux-x64:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Add Permission
        run: chmod +x cross/setup_docker.sh &&  chmod +x cross/build.sh
      - name: Generate Headers
        run: chmod +x gradlew && ./gradlew compileJava
      - name: Build
        env:
          CROSS: linux-x64
        run: cross/setup_docker.sh
      - name: Archive NativeLib artifacts
        uses: actions/upload-artifact@v2
        with:
          name: linux-x64
          path: |
            native/cmake-build-debug/Release
  build-android-arm64:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Add Permission
        run: chmod +x cross/setup_docker.sh &&  chmod +x cross/build.sh
      - name: Generate Headers
        run: chmod +x gradlew && ./gradlew compileJava
      - name: Build
        env:
          CROSS: android-arm64
        run: cross/setup_docker.sh
      - name: Archive NativeLib artifacts
        uses: actions/upload-artifact@v2
        with:
          name: android-arm64
          path: |
            native/cmake-build-debug/Release
  build-android-arm:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Add Permission
        run: chmod +x cross/setup_docker.sh &&  chmod +x cross/build.sh
      - name: Generate Headers
        run: chmod +x gradlew && ./gradlew compileJava
      - name: Build
        env:
          CROSS: android-arm
        run: cross/setup_docker.sh
      - name: Archive NativeLib artifacts
        uses: actions/upload-artifact@v2
        with:
          name: android-arm
          path: |
            native/cmake-build-debug/Release
  build-linux-arm:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Add Permission
        run: chmod +x cross/setup_docker.sh &&  chmod +x cross/build.sh
      - name: Generate Headers
        run: chmod +x gradlew && ./gradlew compileJava
      - name: Build
        env:
          CROSS: linux-arm64
        run: cross/setup_docker.sh
      - name: Archive NativeLib artifacts
        uses: actions/upload-artifact@v2
        with:
          name: linux-arm
          path: |
            native/cmake-build-debug/Release
  build-android-x86_64:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Add Permission
        run: chmod +x cross/setup_docker.sh &&  chmod +x cross/build.sh
      - name: Generate Headers
        run: chmod +x gradlew && ./gradlew compileJava
      - name: Build
        env:
          CROSS: android-x86_64
        run: cross/setup_docker.sh
      - name: Archive NativeLib artifacts
        uses: actions/upload-artifact@v2
        with:
          name: android-x86_64
          path: |
            native/cmake-build-debug/Release
  build-android-x86:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Add Permission
        run: chmod +x cross/setup_docker.sh &&  chmod +x cross/build.sh
      - name: Generate Headers
        run: chmod +x gradlew && ./gradlew compileJava
      - name: Build
        env:
          CROSS: android-x86
        run: cross/setup_docker.sh
      - name: Archive NativeLib artifacts
        uses: actions/upload-artifact@v2
        with:
          name: android-x86
          path: |
            native/cmake-build-debug/Release
  build-linux-arm64:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Add Permission
        run: chmod +x cross/setup_docker.sh &&  chmod +x cross/build.sh
      - name: Generate Headers
        run: chmod +x gradlew && ./gradlew compileJava
      - name: Build
        env:
          CROSS: linux-arm64
        run: cross/setup_docker.sh
      - name: Archive NativeLib artifacts
        uses: actions/upload-artifact@v2
        with:
          name: linux-arm64
          path: |
            native/cmake-build-debug/Release
  build-windows-shared-x86:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Add Permission
        run: chmod +x cross/setup_docker.sh &&  chmod +x cross/build.sh
      - name: Generate Headers
        run: chmod +x gradlew && ./gradlew compileJava
      - name: Build
        env:
          CROSS: windows-shared-x86
        run: cross/setup_docker.sh
      - name: Archive NativeLib artifacts
        uses: actions/upload-artifact@v2
        with:
          name: windows-shared-x86
          path: |
            native/cmake-build-debug/Release
  build-windows-shared-x64:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Add Permission
        run: chmod +x cross/setup_docker.sh &&  chmod +x cross/build.sh
      - name: Generate Headers
        run: chmod +x gradlew && ./gradlew compileJava
      - name: Build
        env:
          CROSS: windows-shared-x64
        run: cross/setup_docker.sh
      - name: Archive NativeLib artifacts
        uses: actions/upload-artifact@v2
        with:
          name: windows-shared-x64
          path: |
            native/cmake-build-debug/Release

  build-macos-latest:
    needs: test
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Add Permission
        run: chmod +x cross/setup_docker.sh &&  chmod +x cross/build.sh
      - name: Generate Headers
        run: chmod +x gradlew && ./gradlew jar
      - name: Build
        run: |
          cd native
          mkdir cmake-build-debug
          cd cmake-build-debug
          rm -rf CMakeCache.txt
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CACHEFILE_DIR=$PWD -Dcross_triple=macos-x64 ..
          make install -j8
      - name: Archive NativeLib artifacts
        uses: actions/upload-artifact@v2
        with:
          name: macos-x64
          path: |
            native/cmake-build-debug/Release
  pack-allInOneJar:
    needs:
      - build-linux-x64
      - build-android-arm64
      - build-linux-arm
      - build-android-x86_64
      - build-linux-arm64
      - build-windows-shared-x64
      - build-windows-shared-x86
      - build-macos-latest
      - build-android-x86
      - build-android-arm
    runs-on: ubuntu-latest
    env:
      GITHUBTOKEN: ${{ secrets.GITHUBTOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: copy Native Lib
        run: mkdir src/main/resources/ && mkdir src/main/resources/silk4j_libs && cp -r artifacts/* src/main/resources/silk4j_libs
      - name: Generate file list
        run: |
          cd src/main/resources
          find . -name *.dll > filelist.txt
          find . -name *.so >> filelist.txt
          find . -name *.dylib >> filelist.txt
          mv filelist.txt silk4j_libs
      - name: packJar
        run: chmod +x gradlew && ./gradlew jar
      - name: Upload AllInOneJar
        uses: actions/upload-artifact@v2
        with:
          name: AllInOne
          path: |
            build/libs
